name: Model Conversion Workflow

on:
  workflow_dispatch:
    inputs:
      model_url:
        description: '模型下载URL (支持 HuggingFace/GitHub URL)'
        required: true
      export_format:
        description: '导出格式 (例如: mnn)'
        required: true
        default: 'mnn'
      quant_bit:
        description: '量化位数'
        required: true
        default: '4'
      quant_block:
        description: '量化块大小'
        required: true
        default: '128'

jobs:
  convert_model:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Extract model info
      id: model_info
      env:
        MODEL_URL: ${{ github.event.inputs.model_url }}
      run: |
        set -eo pipefail
        if [[ $MODEL_URL == *"huggingface.co"* ]]; then
          # 提取完整的 repo_id (e.g. username/model_name)
          MODEL_NAME=$(echo "$MODEL_URL" | sed -n 's|.*huggingface\.co/\([^/]\{1,\}/[^/]\{1,\}\).*|\1|p')
          [ -z "$MODEL_NAME" ] && MODEL_NAME=$(echo "$MODEL_URL" | awk -F/ '{print $(NF-1)"/"$NF}')
        elif [[ $MODEL_URL == *"github.com"* ]]; then
          MODEL_NAME=$(basename "$MODEL_URL" .git)
        else
          MODEL_NAME=$(basename "$MODEL_URL" | sed 's/\.zip$//;s/\.tar$//')
        fi
        echo "MODEL_NAME=${MODEL_NAME}" >> $GITHUB_ENV
        echo "REPO_ID=${MODEL_NAME}" >> $GITHUB_ENV
        echo "model_name=${MODEL_NAME}" >> $GITHUB_OUTPUT

    - name: Setup system tools
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip git

    - name: Configure swap space
      run: |
        sudo swapoff /swapfile || true
        sudo rm -f /swapfile
        sudo fallocate -l 8G /swapfile
        sudo chmod 600 /swapfile
        sudo mkswap /swapfile
        sudo swapon /swapfile
        free -h

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install torch transformers accelerate llmexport tqdm
        pip install "mnn>=2.0.0"  # 确认 MNN 版本
        pip install huggingface_hub

    - name: Download model
      env:
        HF_TOKEN: ${{ secrets.HUGGINGFACE_TOKEN }}
      run: |
        set -x
        mkdir -p ${{ github.workspace }}/models
        cd ${{ github.workspace }}/models

        if [[ "${{ env.MODEL_NAME }}" == */* ]] && [[ $MODEL_URL == *"huggingface.co"* ]]; then
          echo "Downloading Hugging Face model..."
          huggingface-cli download ${{ env.REPO_ID }} \
            --cache-dir . \
            --token $HF_TOKEN \
            --resume-download \
            --local-dir ${{ env.MODEL_NAME }}
        elif [[ $MODEL_URL == *".zip" ]]; then
          echo "Downloading zip archive..."
          wget -q ${{ github.event.inputs.model_url }} -O model.zip
          unzip -q model.zip -d ${{ env.MODEL_NAME }}
        elif [[ $MODEL_URL == *"github.com"* ]]; then
          echo "Cloning Git repository..."
          git clone --depth 1 ${{ github.event.inputs.model_url }} ${{ env.MODEL_NAME }}
        else
          echo "Unsupported URL format"
          exit 1
        fi

    - name: Convert model
      run: |
        set -x
        cd ${{ github.workspace }}/models
        llmexport --path ${{ env.MODEL_NAME }} \
                 --export ${{ github.event.inputs.export_format }} \
                 --quant_bit ${{ github.event.inputs.quant_bit }} \
                 --quant_block ${{ github.event.inputs.quant_block }} \
                 --output_dir ./converted

        # 重命名输出文件
        mv ./converted/*.${{ github.event.inputs.export_format }} ./converted/${{ env.MODEL_NAME }}.${{ github.event.inputs.export_format }}

    - name: Archive converted model
      run: |
        cd ${{ github.workspace }}/models/converted
        tar -czvf ${{ env.MODEL_NAME }}.tar.gz .

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: converted-${{ env.MODEL_NAME }}
        path: ${{ github.workspace }}/models/converted/${{ env.MODEL_NAME }}.tar.gz
        retention-days: 7

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: converted-${{ env.MODEL_NAME }}-$(date +%s)
        name: "${{ env.MODEL_NAME }} ${{ github.event.inputs.export_format }} Model"
        body: |
          Conversion Details:
          - Source: ${{ github.event.inputs.model_url }}
          - Format: ${{ github.event.inputs.export_format }}
          - Quantization: ${{ github.event.inputs.quant_bit }}bit
          - Block Size: ${{ github.event.inputs.quant_block }}
        files: |
          ${{ github.workspace }}/models/converted/${{ env.MODEL_NAME }}.tar.gz
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Cleanup resources
      if: always()
      run: |
        sudo swapoff /swapfile
        sudo rm -f /swapfile
        rm -rf ${{ github.workspace }}/models
